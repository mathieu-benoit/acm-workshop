<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>9. Online Boutique apps on</title><link>https://mathieu-benoit.github.io/acm-workshop/onlineboutique/index.html</link><description>Recent content in 9. Online Boutique apps on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://mathieu-benoit.github.io/acm-workshop/onlineboutique/index.xml" rel="self" type="application/rss+xml"/><item><title>Set up DNS</title><link>https://mathieu-benoit.github.io/acm-workshop/onlineboutique/set-up-dns/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mathieu-benoit.github.io/acm-workshop/onlineboutique/set-up-dns/index.html</guid><description>Duration: 5 min | Persona: Platform Admin
In this section, you will set up a dedicated DNS with Cloud Endpoints you will use later for the Online Boutique app.
Initialize variables:
WORK_DIR=~/ source ${WORK_DIR}acm-workshop-variables.sh echo &amp;#34;export ONLINE_BOUTIQUE_INGRESS_GATEWAY_HOST_NAME=&amp;#39;onlineboutique.endpoints.${TENANT_PROJECT_ID}.cloud.goog&amp;#39;&amp;#34; &amp;gt;&amp;gt; ${WORK_DIR}acm-workshop-variables.sh source ${WORK_DIR}acm-workshop-variables.sh Create FQDN Create an FQDN with Cloud Endpoints for Online Boutique:
cat &amp;lt;&amp;lt;EOF &amp;gt; ${WORK_DIR}dns-spec.yaml swagger: &amp;#34;2.0&amp;#34; info: description: &amp;#34;Online Boutique Cloud Endpoints DNS&amp;#34; title: &amp;#34;Online Boutique Cloud Endpoints DNS&amp;#34; version: &amp;#34;1.</description></item><item><title>Set up URL uptime check</title><link>https://mathieu-benoit.github.io/acm-workshop/onlineboutique/set-up-url-uptime-check/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mathieu-benoit.github.io/acm-workshop/onlineboutique/set-up-url-uptime-check/index.html</guid><description>Duration: 10 min | Persona: Platform Admin
In this section, you will set up an uptime check on the Online Boutique website URL.
Initialize variables:
WORK_DIR=~/ source ${WORK_DIR}acm-workshop-variables.sh mkdir -p ${WORK_DIR}$TENANT_PROJECT_DIR_NAME/$ONLINEBOUTIQUE_NAMESPACE Define Uptime check config Define the MonitoringUptimeCheckConfig:
cat &amp;lt;&amp;lt;EOF &amp;gt; ${WORK_DIR}$TENANT_PROJECT_DIR_NAME/$ONLINEBOUTIQUE_NAMESPACE/uptime-check-config.yaml apiVersion: monitoring.cnrm.cloud.google.com/v1beta1 kind: MonitoringUptimeCheckConfig metadata: name: uptimecheckconfig-${ONLINEBOUTIQUE_NAMESPACE} spec: projectRef: name: ${TENANT_PROJECT_ID} displayName: ${ONLINEBOUTIQUE_NAMESPACE} period: 900s timeout: 5s monitoredResource: type: &amp;#34;uptime_url&amp;#34; filterLabels: host: ${ONLINE_BOUTIQUE_INGRESS_GATEWAY_HOST_NAME} project_id: ${TENANT_PROJECT_ID} httpCheck: port: 443 requestMethod: GET useSsl: true validateSsl: true EOF Deploy Kubernetes manifests cd ${WORK_DIR}$TENANT_PROJECT_DIR_NAME/ git add .</description></item><item><title>Allow Config Sync</title><link>https://mathieu-benoit.github.io/acm-workshop/onlineboutique/allow-config-sync/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mathieu-benoit.github.io/acm-workshop/onlineboutique/allow-config-sync/index.html</guid><description>Duration: 5 min | Persona: Platform Admin
In this section, you will bind the workload identity capability from the Online Boutique&amp;rsquo;s RepoSync Kubernetes Service Account to the Artifact Registry reader Google Service Account created earlier.
Initialize variables:
WORK_DIR=~/ source ${WORK_DIR}acm-workshop-variables.sh echo &amp;#34;export ONLINEBOUTIQUE_NAMESPACE=onlineboutique&amp;#34; &amp;gt;&amp;gt; ${WORK_DIR}acm-workshop-variables.sh source ${WORK_DIR}acm-workshop-variables.sh mkdir ${WORK_DIR}$TENANT_PROJECT_DIR_NAME/$ONLINEBOUTIQUE_NAMESPACE Bind the Artifact Registry reader GSA to the Online Boutique&amp;rsquo;s RepoSync cat &amp;lt;&amp;lt;EOF &amp;gt; ${WORK_DIR}$TENANT_PROJECT_DIR_NAME/$ONLINEBOUTIQUE_NAMESPACE/artifactregistry-charts-reader-workload-identity-user.yaml apiVersion: iam.cnrm.cloud.google.com/v1beta1 kind: IAMPartialPolicy metadata: name: ${HELM_CHARTS_READER_GSA}-${ONLINEBOUTIQUE_NAMESPACE} namespace: ${TENANT_PROJECT_ID} annotations: config.</description></item><item><title>Configure Config Sync</title><link>https://mathieu-benoit.github.io/acm-workshop/onlineboutique/configure-config-sync/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mathieu-benoit.github.io/acm-workshop/onlineboutique/configure-config-sync/index.html</guid><description>Duration: 5 min | Persona: Platform Admin
In this section, you will configure Config Sync to sync the resources in the Online Boutique Namespace via its associated RoleBinding.
Initialize variables:
WORK_DIR=~/ source ${WORK_DIR}acm-workshop-variables.sh mkdir -p ${WORK_DIR}$GKE_CONFIGS_DIR_NAME/repo-syncs mkdir ${WORK_DIR}$GKE_CONFIGS_DIR_NAME/repo-syncs/$ONLINEBOUTIQUE_NAMESPACE Define Namespace Define a dedicated Namespace for the Online Boutique apps:
cat &amp;lt;&amp;lt;EOF &amp;gt; ${WORK_DIR}$GKE_CONFIGS_DIR_NAME/repo-syncs/$ONLINEBOUTIQUE_NAMESPACE/namespace.yaml apiVersion: v1 kind: Namespace metadata: labels: istio-injection: enabled pod-security.kubernetes.io/enforce: restricted name: ${ONLINEBOUTIQUE_NAMESPACE} EOF Note In addition to the istio-injection to include this Namespace into our Service Mesh, we are also adding the pod-security.</description></item><item><title>Prepare containers and chart</title><link>https://mathieu-benoit.github.io/acm-workshop/onlineboutique/prepare-containers-and-chart/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mathieu-benoit.github.io/acm-workshop/onlineboutique/prepare-containers-and-chart/index.html</guid><description>Duration: 5 min | Persona: Apps Operator
In this section, you will copy the Online Boutique apps container images and the Helm chart in your private Artifact Registry. You will also scan one container image.
Initialize variables:
WORK_DIR=~/ source ${WORK_DIR}acm-workshop-variables.sh ONLINE_BOUTIQUE_VERSION=v0.5.0 echo &amp;#34;export ONLINE_BOUTIQUE_VERSION=${ONLINE_BOUTIQUE_VERSION}&amp;#34; &amp;gt;&amp;gt; ${WORK_DIR}acm-workshop-variables.sh PRIVATE_ONLINE_BOUTIQUE_REGISTRY=$CONTAINER_REGISTRY_REPOSITORY/onlineboutique echo &amp;#34;export PRIVATE_ONLINE_BOUTIQUE_REGISTRY=${PRIVATE_ONLINE_BOUTIQUE_REGISTRY}&amp;#34; &amp;gt;&amp;gt; ${WORK_DIR}acm-workshop-variables.sh source ${WORK_DIR}acm-workshop-variables.sh Prepare the container images Copy the public container images to your private registry:
UPSTREAM_ONLINE_BOUTIQUE_CONTAINER_REGISTRY=gcr.io/google-samples/microservices-demo HTTP_SERVICES=&amp;#34;frontend loadgenerator&amp;#34; TAG=$ONLINE_BOUTIQUE_VERSION for s in $HTTP_SERVICES; do crane copy $UPSTREAM_ONLINE_BOUTIQUE_CONTAINER_REGISTRY/$s:$TAG $PRIVATE_ONLINE_BOUTIQUE_REGISTRY/$s:$TAG; done GRPC_SERVICES=&amp;#34;adservice cartservice checkoutservice currencyservice emailservice paymentservice productcatalogservice recommendationservice shippingservice&amp;#34; TAG=$ONLINE_BOUTIQUE_VERSION-native-grpc-probes for s in $GRPC_SERVICES; do crane copy $UPSTREAM_ONLINE_BOUTIQUE_CONTAINER_REGISTRY/$s:$TAG $PRIVATE_ONLINE_BOUTIQUE_REGISTRY/$s:$TAG; done crane copy redis:alpine $PRIVATE_ONLINE_BOUTIQUE_REGISTRY/redis:alpine Tip We are making the copy of the gRPC services supporting the native Kubernetes health probes in order to get the associated optimized images, learn more about this here.</description></item><item><title>Deploy apps</title><link>https://mathieu-benoit.github.io/acm-workshop/onlineboutique/deploy-apps/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mathieu-benoit.github.io/acm-workshop/onlineboutique/deploy-apps/index.html</guid><description>Duration: 5 min | Persona: Apps Operator
In this section, you will deploy the Online Boutique apps, via Config Sync and its Helm chart.
Initialize variables:
WORK_DIR=~/ source ${WORK_DIR}acm-workshop-variables.sh Define RepoSync to deploy the Online Boutique&amp;rsquo;s Helm chart Define the RepoSync to deploy the Online Boutique&amp;rsquo;s Helm chart:
cat &amp;lt;&amp;lt;EOF &amp;gt; ${WORK_DIR}$GKE_CONFIGS_DIR_NAME/repo-syncs/$ONLINEBOUTIQUE_NAMESPACE/repo-sync.yaml apiVersion: configsync.gke.io/v1beta1 kind: RepoSync metadata: name: repo-sync namespace: ${ONLINEBOUTIQUE_NAMESPACE} spec: sourceFormat: unstructured sourceType: helm helm: repo: oci://${CHART_REGISTRY_REPOSITORY} chart: ${ONLINEBOUTIQUE_NAMESPACE} version: ${ONLINE_BOUTIQUE_VERSION:1} releaseName: ${ONLINEBOUTIQUE_NAMESPACE} auth: gcpserviceaccount gcpServiceAccountEmail: ${HELM_CHARTS_READER_GSA}@${TENANT_PROJECT_ID}.</description></item><item><title>Deploy AuthorizationPolicies</title><link>https://mathieu-benoit.github.io/acm-workshop/onlineboutique/deploy-authorization-policies/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mathieu-benoit.github.io/acm-workshop/onlineboutique/deploy-authorization-policies/index.html</guid><description>Duration: 5 min | Persona: Apps Operator
In this section, you will see how to track the AuthorizationPolicies issue and then you will deploy granular and specific AuthorizationPolicies for the Online Boutique namespace to fix this issue.
Initialize variables:
WORK_DIR=~/ source ${WORK_DIR}acm-workshop-variables.sh See the AuthorizationPolicies issue See the AuthorizationPolicies issue in the GKE cluster for the Online Boutique apps, by running this command and click on this link:
echo -e &amp;#34;https://console.</description></item><item><title>Deploy NetworkPolicies</title><link>https://mathieu-benoit.github.io/acm-workshop/onlineboutique/deploy-network-policies/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mathieu-benoit.github.io/acm-workshop/onlineboutique/deploy-network-policies/index.html</guid><description>Duration: 5 min | Persona: Apps Operator
In this section, you will see the Policy Controller violation regarding to the missing NetworkPolicies in the Online Boutique namespace. Then, you will fix this violation by deploying the associated resources.
Initialize variables:
WORK_DIR=~/ source ${WORK_DIR}acm-workshop-variables.sh See the Policy Controller violations See the Policy Controller violations in the GKE cluster, by running this command and click on this link:
echo -e &amp;#34;https://console.cloud.google.com/kubernetes/policy_controller/dashboard?project=${TENANT_PROJECT_ID}&amp;#34; You will see that the K8sRequireNamespaceNetworkPolicies Constraint has this violation: Namespace &amp;lt;onlineboutique&amp;gt; does not have a NetworkPolicy.</description></item><item><title>Deploy Sidecars</title><link>https://mathieu-benoit.github.io/acm-workshop/onlineboutique/deploy-sidecars/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mathieu-benoit.github.io/acm-workshop/onlineboutique/deploy-sidecars/index.html</guid><description>Duration: 5 min | Persona: Apps Operator
In this section, you will deploy fine granular Sidecars in order to optimize the resources (CPU/Memory) usage of the Online Boutique apps&amp;rsquo;s sidecar proxies. By default, each application in the Online Boutique namespace can reach to all the endpoints in the mesh. The Sidecar resource allows to reduce that list to the strict minimum of which endpoints it needs to communicate with.</description></item><item><title>Memorystore</title><link>https://mathieu-benoit.github.io/acm-workshop/onlineboutique/memorystore/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mathieu-benoit.github.io/acm-workshop/onlineboutique/memorystore/index.html</guid><description>Use Memorystore (Redis).
Allow MemorystoreDuration: 5 min | Persona: Org Admin
Enforce Memorystore policiesDuration: 5 min | Persona: Org Admin
Create MemorystoreDuration: 10 min | Persona: Platform Admin
Use MemorystoreDuration: 10 min | Persona: Apps Operator
Secure Memorystore accessDuration: 10 min | Persona: Apps Operator</description></item><item><title>Spanner</title><link>https://mathieu-benoit.github.io/acm-workshop/onlineboutique/spanner/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mathieu-benoit.github.io/acm-workshop/onlineboutique/spanner/index.html</guid><description>Use Spanner.
Allow SpannerDuration: 5 min | Persona: Org Admin
Create SpannerDuration: 10 min | Persona: Platform Admin
Use SpannerDuration: 10 min | Persona: Apps Operator</description></item></channel></rss>