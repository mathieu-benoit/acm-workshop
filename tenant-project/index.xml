<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2. Tenant project on </title>
    <link>https://mathieu-benoit.github.io/acm-workshop/tenant-project/index.html</link>
    <description>Recent content in 2. Tenant project on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://mathieu-benoit.github.io/acm-workshop/tenant-project/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Create Tenant project</title>
      <link>https://mathieu-benoit.github.io/acm-workshop/tenant-project/create-tenant-project/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://mathieu-benoit.github.io/acm-workshop/tenant-project/create-tenant-project/index.html</guid>
      <description>Duration: 10 min | Persona: Org Admin
In this section, you will create the Tenant project. The Tenant project will contain all the Google Cloud resources needed in this workshop.
Define variables:
WORK_DIR=~/ source ${WORK_DIR}acm-workshop-variables.sh TENANT_PROJECT_ID=acm-workshop-${RANDOM_SUFFIX}-tenant echo &amp;#34;export TENANT_PROJECT_ID=${TENANT_PROJECT_ID}&amp;#34; &amp;gt;&amp;gt; ${WORK_DIR}acm-workshop-variables.sh echo &amp;#34;export TENANT_PROJECT_SA_EMAIL=${TENANT_PROJECT_ID}@${HOST_PROJECT_ID}.iam.gserviceaccount.com&amp;#34; &amp;gt;&amp;gt; ${WORK_DIR}acm-workshop-variables.sh source ${WORK_DIR}acm-workshop-variables.sh Create a dedicated folder for this Tenant project resources:
mkdir ${WORK_DIR}$HOST_PROJECT_DIR_NAME/projects mkdir ${WORK_DIR}$HOST_PROJECT_DIR_NAME/projects/$TENANT_PROJECT_ID Define GCP project Define the GCP project either at the Folder level or the Organization level: Folder level Org level At the Folder level:</description>
    </item>
    <item>
      <title>Set up Tenant project&#39;s Git repo</title>
      <link>https://mathieu-benoit.github.io/acm-workshop/tenant-project/set-up-gke-project-git-repo/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://mathieu-benoit.github.io/acm-workshop/tenant-project/set-up-gke-project-git-repo/index.html</guid>
      <description>Duration: 5 min | Persona: Org Admin
In this section, you will set up a dedicated GitHub repository containing all the Kubernetes manifests which will be deployed by Config Sync and Config Connector in order to provision the Google Cloud services in the Tenant project.
Define variables:
WORK_DIR=~/ source ${WORK_DIR}acm-workshop-variables.sh echo &amp;#34;export TENANT_PROJECT_DIR_NAME=acm-workshop-tenant-project-repo&amp;#34; &amp;gt;&amp;gt; ${WORK_DIR}acm-workshop-variables.sh source ${WORK_DIR}acm-workshop-variables.sh Create GitHub repository Create a dedicated GitHub repository to store any Kubernetes manifests associated to the Tenant project:</description>
    </item>
    <item>
      <title>Enforce GCP resources policies</title>
      <link>https://mathieu-benoit.github.io/acm-workshop/tenant-project/enforce-gcp-resources-policies/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://mathieu-benoit.github.io/acm-workshop/tenant-project/enforce-gcp-resources-policies/index.html</guid>
      <description>Duration: 5 min | Persona: Org Admin
In this section, you will set up policies in order to enforce governance against the Kubernetes manifests defining your Google Cloud services. As an example, you will limit the locations and the kind available for the Google Cloud services.
Initialize variables:
WORK_DIR=~/ source ${WORK_DIR}acm-workshop-variables.sh echo &amp;#34;export GKE_LOCATION=northamerica-northeast1&amp;#34; &amp;gt;&amp;gt; ${WORK_DIR}acm-workshop-variables.sh source ${WORK_DIR}acm-workshop-variables.sh We are defining the GKE_LOCATION in northamerica-northeast1 this will be used later for the location of the VPC, GKE, Artifact Registry, etc.</description>
    </item>
    <item>
      <title>Allow Monitoring</title>
      <link>https://mathieu-benoit.github.io/acm-workshop/tenant-project/allow-monitoring/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://mathieu-benoit.github.io/acm-workshop/tenant-project/allow-monitoring/index.html</guid>
      <description>Duration: 2 min | Persona: Org Admin
In this section, you will grant the appropriate the IAM roles for the Tenant project&amp;rsquo;s service account. This will allow later this service account to provision some monitoring features.
Initialize variables:
WORK_DIR=~/ source ${WORK_DIR}acm-workshop-variables.sh Define roles Define the monitoring.uptimeCheckConfigEditor role with an IAMPolicyMember for the Tenant project&amp;rsquo;s service account:
cat &amp;lt;&amp;lt;EOF &amp;gt; ${WORK_DIR}$HOST_PROJECT_DIR_NAME/projects/$TENANT_PROJECT_ID/uptime-check-config-editor.yaml apiVersion: iam.cnrm.cloud.google.com/v1beta1 kind: IAMPolicyMember metadata: name: uptime-check-config-editor-${TENANT_PROJECT_ID} namespace: config-control annotations: config.</description>
    </item>
    <item>
      <title>Set up Monitoring</title>
      <link>https://mathieu-benoit.github.io/acm-workshop/tenant-project/set-up-monitoring/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://mathieu-benoit.github.io/acm-workshop/tenant-project/set-up-monitoring/index.html</guid>
      <description>Duration: 5 min | Persona: Platform Admin
In this section, you will set up an monitoring notification channel with you email and a generic alert policy on URLs uptime checks for the Tenant project.
Initialize variables:
WORK_DIR=~/ source ${WORK_DIR}acm-workshop-variables.sh Define variables for this page:
export NOTIFICATION_CHANNEL_EMAIL_ADDRESS=FIXME export NOTIFICATION_CHANNEL_NAME=monitoringnotificationchannel-email Set your own email address for the NOTIFICATION_CHANNEL_EMAIL_ADDRESS variable, this will be used when defining the monitoring notification channel below.
Define the monitoring notification channel with your email Define the VPC:</description>
    </item>
  </channel>
</rss>